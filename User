import java.util.ArrayList;
import java.util.List;

class User implements Matchable {
    // Fields to store user information
    private String name;
    private int age;
    private String location;
    private ArrayList<String> interests;
    private String birthMonth;
    private int birthDate;
    private String zodiacSign;
    private List<User> matches; // Changed to List instead of ArrayList

    // Constructor to initialize user object
    public User(String name, int age, String location, ArrayList<String> interests, String birthMonth, int birthDate) {
        this.name = name;
        this.age = age;
        this.location = location;
        this.interests = interests;
        this.birthMonth = birthMonth;
        this.birthDate = birthDate;
        this.zodiacSign = ""; // Initialize to empty string
        this.matches = new ArrayList<>(); // Initialize matches list
    }

    // Getters and setters for user attributes

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getLocation() {
        return location;
    }

    public ArrayList<String> getInterests() {
        return interests;
    }

    public String getBirthMonth() {
        return birthMonth;
    }

    public int getBirthDate() {
        return birthDate;
    }

    public String getZodiacSign() {
        return zodiacSign;
    }

    public void setZodiacSign(String zodiacSign) {
        this.zodiacSign = zodiacSign;
    }

    public List<User> getMatches() {
        return matches;
    }

    // Method to add a match to the user's list of matches
    public void addMatch(User match) {
        matches.add(match);
    }

    // Method to get user details as a formatted string
    public String getDetails() {
        StringBuilder details = new StringBuilder();
        details.append(name).append("'s details:\n");
        details.append("Age: ").append(age).append(" years old\n");
        details.append("Location: ").append(location).append("\n");
        details.append("Interests: ").append(interests).append("\n");
        details.append("Birth month: ").append(birthMonth).append("\n");
        details.append("Birth date: ").append(birthDate).append("\n");
        return details.toString();
    }

    // Method to print potential matches
    public void printPotentialMatches(List<User> potentialMatches) {
        for (User match : potentialMatches) {
            System.out.println(match.getName());
        }
    }
}
